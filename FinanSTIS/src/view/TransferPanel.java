/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import controller.ExpenseController;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import model.Transaction;

/**
 *
 * @author Yedija Lewi Suryadi (222212921 - 2KS1 - Politeknik Statistika STIS 2024)
 */
public class TransferPanel extends javax.swing.JPanel {

    private ExpenseController expenseController;
    private FinanSTISApp mainApp;
    private int currentUserId;
    /**
     * Creates new form TransferPanel
     */
    
    public TransferPanel(ExpenseController expenseController, FinanSTISApp mainApp, int currentUserId) {
        this.expenseController = expenseController;
        this.mainApp = mainApp;
        this.currentUserId = currentUserId;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        transferSaldoLabel = new javax.swing.JLabel();
        transferSaldoPanel = new javax.swing.JPanel();
        tanggalTransferSaldoLabel = new javax.swing.JLabel();
        transferSaldoDateChooser = new com.toedter.calendar.JDateChooser();
        catatTransferSaldoButton = new javax.swing.JButton();
        kategoriTransferSaldoDariComboBox = new javax.swing.JComboBox<>();
        transferSaldoDariLabel = new javax.swing.JLabel();
        transferSaldoKeLabel = new javax.swing.JLabel();
        kategoriTransferSaldoKeComboBox = new javax.swing.JComboBox<>();
        biayaAdminLabel = new javax.swing.JLabel();
        biayaAdminTextField = new javax.swing.JTextField();
        jumlahTransferLabel = new javax.swing.JLabel();
        jumlahTransferTextField = new javax.swing.JTextField();

        transferSaldoLabel.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        transferSaldoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        transferSaldoLabel.setText("Transfer Saldo");

        tanggalTransferSaldoLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tanggalTransferSaldoLabel.setText("Tanggal   :");

        catatTransferSaldoButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        catatTransferSaldoButton.setText("CATAT TRANSFER SALDO");
        catatTransferSaldoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catatTransferSaldoButtonActionPerformed(evt);
            }
        });

        kategoriTransferSaldoDariComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tunai", "Bank", "E-Money", "Lainnya" }));

        transferSaldoDariLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        transferSaldoDariLabel.setText("Dari:");

        transferSaldoKeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        transferSaldoKeLabel.setText("Ke:");

        kategoriTransferSaldoKeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tunai", "Bank", "E-Money", "Lainnya" }));

        biayaAdminLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        biayaAdminLabel.setText("Biaya Admin:");

        biayaAdminTextField.setText("0");
        biayaAdminTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                biayaAdminTextFieldActionPerformed(evt);
            }
        });

        jumlahTransferLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jumlahTransferLabel.setText("Jumlah    :");

        jumlahTransferTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahTransferTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout transferSaldoPanelLayout = new javax.swing.GroupLayout(transferSaldoPanel);
        transferSaldoPanel.setLayout(transferSaldoPanelLayout);
        transferSaldoPanelLayout.setHorizontalGroup(
            transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferSaldoPanelLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transferSaldoPanelLayout.createSequentialGroup()
                        .addComponent(jumlahTransferLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jumlahTransferTextField))
                    .addComponent(catatTransferSaldoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, transferSaldoPanelLayout.createSequentialGroup()
                        .addGroup(transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(transferSaldoDariLabel)
                            .addComponent(transferSaldoKeLabel)
                            .addComponent(kategoriTransferSaldoDariComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(kategoriTransferSaldoKeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tanggalTransferSaldoLabel)
                            .addGroup(transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(biayaAdminTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(biayaAdminLabel, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(transferSaldoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(41, 41, 41))
        );
        transferSaldoPanelLayout.setVerticalGroup(
            transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transferSaldoPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jumlahTransferLabel)
                    .addComponent(jumlahTransferTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(transferSaldoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(transferSaldoPanelLayout.createSequentialGroup()
                        .addComponent(transferSaldoDariLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kategoriTransferSaldoDariComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transferSaldoKeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(kategoriTransferSaldoKeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(transferSaldoPanelLayout.createSequentialGroup()
                        .addComponent(tanggalTransferSaldoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(transferSaldoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(biayaAdminLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(biayaAdminTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(catatTransferSaldoButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transferSaldoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transferSaldoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(transferSaldoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(transferSaldoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void catatTransferSaldoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catatTransferSaldoButtonActionPerformed
        // Mendapatkan nilai dari field input
        String jumlahStr = jumlahTransferTextField.getText();
        String kategoriDari = (String) kategoriTransferSaldoDariComboBox.getSelectedItem();
        String kategoriKe = (String) kategoriTransferSaldoKeComboBox.getSelectedItem();
        java.util.Date tanggalUtil = transferSaldoDateChooser.getDate();
        String biayaAdminStr = biayaAdminTextField.getText();

        // Format tanggal ke string
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = sdf.format(tanggalUtil);

        // Validasi input
        if (jumlahStr.isEmpty() || tanggal == null || kategoriDari.equals(kategoriKe)) {
            JOptionPane.showMessageDialog(this, "Semua field harus diisi dengan benar!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        double jumlah;
        double biayaAdmin = 0;
        try {
            jumlah = Double.parseDouble(jumlahStr);
            biayaAdmin = Double.parseDouble(biayaAdminStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Jumlah dan Biaya Admin harus berupa angka!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        System.out.println("Jumlah: " + jumlah + ", Biaya Admin: " + biayaAdmin);

        // Get balance IDs based on categories
        int balanceIdDari = expenseController.getBalanceIdByCategory(currentUserId, kategoriDari);
        int balanceIdKe = expenseController.getBalanceIdByCategory(currentUserId, kategoriKe);
        System.out.println("Balance ID Dari: " + balanceIdDari + ", Balance ID Ke: " + balanceIdKe);

        if (balanceIdDari == -1 || balanceIdKe == -1) {
            JOptionPane.showMessageDialog(this, "Gagal mendapatkan Balance ID. Pastikan saldo tersedia.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Update saldo untuk balance ID dari
        boolean updateDariSuccess = expenseController.updateBalance(balanceIdDari, jumlah, "Pengeluaran");
        boolean updateKeSuccess = false;

        if (updateDariSuccess) {
            // Update saldo untuk balance ID ke
            updateKeSuccess = expenseController.updateBalance(balanceIdKe, jumlah, "Pemasukan");
        }

        System.out.println("Update Dari Success: " + updateDariSuccess + ", Update Ke Success: " + updateKeSuccess);

        if (updateDariSuccess && updateKeSuccess) {
            // Buat transaksi transfer baru
            Transaction transaksiTransfer = new Transaction();
            transaksiTransfer.setDescription("Transfer dari " + kategoriDari + " ke " + kategoriKe);
            transaksiTransfer.setAmount(jumlah);
            transaksiTransfer.setCategory(kategoriKe);
            transaksiTransfer.setDate(tanggal);
            transaksiTransfer.setUserId(currentUserId);
            transaksiTransfer.setType("Transfer");
            transaksiTransfer.setBalanceId(balanceIdKe);

            boolean transferSuccess = expenseController.addTransaction(transaksiTransfer);
            System.out.println("Transfer Success: " + transferSuccess);

            if (transferSuccess) {
                // Buat pengeluaran otomatis jika ada biaya admin
                if (biayaAdmin > 0) {
                    Transaction transaksiAdmin = new Transaction();
                    transaksiAdmin.setDescription("Biaya Admin Transfer dari " + kategoriDari + " ke " + kategoriKe);
                    transaksiAdmin.setAmount(biayaAdmin);
                    transaksiAdmin.setCategory("Lainnya");
                    transaksiAdmin.setDate(tanggal);
                    transaksiAdmin.setUserId(currentUserId);
                    transaksiAdmin.setType("Pengeluaran");
                    transaksiAdmin.setBalanceId(balanceIdDari);

                    boolean adminSuccess = expenseController.addTransaction(transaksiAdmin);
                    System.out.println("Admin Success: " + adminSuccess);

                    if (!adminSuccess) {
                        JOptionPane.showMessageDialog(this, "Gagal mencatat biaya admin. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    boolean updateAdminSuccess = expenseController.updateBalance(balanceIdDari, biayaAdmin, "Pengeluaran");
                    System.out.println("Update Admin Success: " + updateAdminSuccess);

                    if (!updateAdminSuccess) {
                        JOptionPane.showMessageDialog(this, "Gagal memperbarui saldo untuk biaya admin. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                JOptionPane.showMessageDialog(this, "Transfer saldo berhasil dicatat!", "Success", JOptionPane.INFORMATION_MESSAGE);
                mainApp.getDashboardPanel().loadData("Hari Ini");
                mainApp.showView("dashboard");
            } else {
                JOptionPane.showMessageDialog(this, "Gagal mencatat transfer saldo. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Gagal memperbarui saldo. Coba lagi.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_catatTransferSaldoButtonActionPerformed

    private void biayaAdminTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_biayaAdminTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_biayaAdminTextFieldActionPerformed

    private void jumlahTransferTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahTransferTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jumlahTransferTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel biayaAdminLabel;
    private javax.swing.JTextField biayaAdminTextField;
    private javax.swing.JButton catatTransferSaldoButton;
    private javax.swing.JLabel jumlahTransferLabel;
    private javax.swing.JTextField jumlahTransferTextField;
    private javax.swing.JComboBox<String> kategoriTransferSaldoDariComboBox;
    private javax.swing.JComboBox<String> kategoriTransferSaldoKeComboBox;
    private javax.swing.JLabel tanggalTransferSaldoLabel;
    private javax.swing.JLabel transferSaldoDariLabel;
    private com.toedter.calendar.JDateChooser transferSaldoDateChooser;
    private javax.swing.JLabel transferSaldoKeLabel;
    private javax.swing.JLabel transferSaldoLabel;
    private javax.swing.JPanel transferSaldoPanel;
    // End of variables declaration//GEN-END:variables
}
